#TEST FOR POSTGRES TABLES
#GOAL4 Range lookup on varying column count fetched on a table with 25 columns. Full table scan with all rows returned
#Projection: Increasing number of columns
#Filter: On Primary key
#Schema: 25 columns in a table with bigint datatype
#Purpose: Full table scan time + row handling(de/serialise, encoding) for increasing fetched column being fetched
#TESTS:
#Time to fetch 2 columns based on one PK
#Time to fetch 5 columns based on one PK
#Time to fetch 15 columns based on one PK
type: POSTGRES
driver: org.postgresql.Driver
url: jdbc:postgresql://{{endpoint}}:5432/postgres?sslmode=require
username: {{username}}
password: {{password}}
batchsize: 128
isolation: TRANSACTION_REPEATABLE_READ
loaderthreads: 1
terminals: 1
collect_pg_stat_statements: true
works:
    work:
        time_secs: 300
        active_terminals: 1
        rate: unlimited
        warmup: 60
microbenchmark:
    class: com.oltpbenchmark.benchmarks.featurebench.customworkload.YBDefaultMicroBenchmark
    properties:
        setAutoCommit: true
        create:
            - DROP TABLE IF EXISTS pkey_rangescan_fullTable_25column_1;
            - CREATE TABLE pkey_rangescan_fullTable_25column_1(col_bigint_id_1 bigint,col_bigint_1 bigint ,col_bigint_2 bigint ,col_bigint_3 bigint ,col_bigint_4 bigint ,col_bigint_5 bigint ,col_bigint_6 bigint ,col_bigint_7 bigint ,col_bigint_8 bigint ,col_bigint_9 bigint, col_bigint_10 bigint ,col_bigint_11 bigint ,col_bigint_12 bigint ,col_bigint_13 bigint ,col_bigint_14 bigint ,col_bigint_15 bigint ,col_bigint_16 bigint ,col_bigint_17 bigint ,col_bigint_18 bigint ,col_bigint_19 bigint ,col_bigint_20 bigint ,col_bigint_21 bigint ,col_bigint_22 bigint ,col_bigint_23 bigint ,col_bigint_24 bigint,PRIMARY KEY(col_bigint_id_1));

        loadRules:
            -   table: pkey_rangescan_fullTable_25column_
                count: 1
                rows: 1000000
                columns:
                    -   name: col_bigint_id_
                        count: 1
                        util: PrimaryIntGen
                        params: [1, 1000000]
                    -   name: col_bigint_
                        count: 24
                        util: RandomNumber
                        params: [1, 1000000]
        executeRules:
            - workload: cattribG4_pg_pkey_rangescan_fullTable_table25column_bigint_fetch2column_1MRowsFetched
              run:
                  - name: pkey_rangescan_fullTable_table25column_bigint_fetch2column_1MRowsFetched
                    weight: 100
                    queries:
                        - query: select col_bigint_1,col_bigint_2 where col_varchar_id_1>1
            - workload: cattribG4_pg_pkey_rangescan_fullTable_table25column_bigint_fetch5column_1MRowsFetched
              run:
                  - name: pkey_rangescan_fullTable_table25column_bigint_fetch5column_1MRowsFetched
                    weight: 100
                    queries:
                        - query: select col_bigint_1,col_bigint_2,col_bigint_3,col_bigint_4,col_bigint_5 where col_varchar_id_1>1
            - workload: cattribG4_pg_pkey_rangescan_fullTable_table25column_bigint_fetch15column_1MRowsFetched
              run:
                  - name: pkey_rangescan_fullTable_table25column_bigint_fetch15column_1MRowsFetched
                    weight: 100
                    queries:
                        - query: select col_bigint_1,col_bigint_2,col_bigint_3,col_bigint_4,col_bigint_5,col_bigint_6,col_bigint_7,col_bigint_8,col_bigint_9,col_bigint_10,col_bigint_11,col_bigint_12,col_bigint_13,col_bigint_14,col_bigint_15 from pkey_rangescan_fullTable_25column_1 where col_varchar_id_1>1